// <auto-generated />
using CoinsManagerService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoinsManagerService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230116143312_initialmigration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoinsManagerService.Models.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommemorativeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nominal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Period")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PictPreviewPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Period");

                    b.HasIndex("Type");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("CoinsManagerService.Models.CoinType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoinTypes");
                });

            modelBuilder.Entity("CoinsManagerService.Models.Continent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Continent1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Continent");

                    b.HasKey("Id");

                    b.ToTable("Continents");
                });

            modelBuilder.Entity("CoinsManagerService.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Continent")
                        .HasColumnType("int");

                    b.Property<string>("Country1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Country");

                    b.HasKey("Id");

                    b.HasIndex("Continent");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CoinsManagerService.Models.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<string>("Period1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Period");

                    b.HasKey("Id");

                    b.HasIndex("Country");

                    b.ToTable("Periods");
                });

            modelBuilder.Entity("CoinsManagerService.Models.Coin", b =>
                {
                    b.HasOne("CoinsManagerService.Models.Period", "PeriodNavigation")
                        .WithMany("Coins")
                        .HasForeignKey("Period")
                        .HasConstraintName("FK_Coins_Periods")
                        .IsRequired();

                    b.HasOne("CoinsManagerService.Models.CoinType", "TypeNavigation")
                        .WithMany("Coins")
                        .HasForeignKey("Type")
                        .HasConstraintName("FK_Coins_Types")
                        .IsRequired();

                    b.Navigation("PeriodNavigation");

                    b.Navigation("TypeNavigation");
                });

            modelBuilder.Entity("CoinsManagerService.Models.Country", b =>
                {
                    b.HasOne("CoinsManagerService.Models.Continent", "ContinentNavigation")
                        .WithMany("Countries")
                        .HasForeignKey("Continent")
                        .HasConstraintName("FK_Countries_Continents")
                        .IsRequired();

                    b.Navigation("ContinentNavigation");
                });

            modelBuilder.Entity("CoinsManagerService.Models.Period", b =>
                {
                    b.HasOne("CoinsManagerService.Models.Country", "CountryNavigation")
                        .WithMany("Periods")
                        .HasForeignKey("Country")
                        .HasConstraintName("FK_Periods_Countries")
                        .IsRequired();

                    b.Navigation("CountryNavigation");
                });

            modelBuilder.Entity("CoinsManagerService.Models.CoinType", b =>
                {
                    b.Navigation("Coins");
                });

            modelBuilder.Entity("CoinsManagerService.Models.Continent", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("CoinsManagerService.Models.Country", b =>
                {
                    b.Navigation("Periods");
                });

            modelBuilder.Entity("CoinsManagerService.Models.Period", b =>
                {
                    b.Navigation("Coins");
                });
#pragma warning restore 612, 618
        }
    }
}
