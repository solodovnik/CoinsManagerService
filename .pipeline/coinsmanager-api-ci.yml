trigger:
- main

stages:
- stage: Build
  displayName: Build .Net Solution
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self
      fetchDepth: 0

    # Install the .NET 8 SDK
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.x'

    # Restore NuGet packages
    - task: DotNetCoreCLI@2
      displayName: 'Restore NuGet Packages'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    # Prepare SonarCloud analysis
    - task: SonarCloudPrepare@3
      inputs:
        scannerMode: 'dotnet'
        SonarCloud: 'SonarCloud'
        organization: 'vadsolodovnik'
        projectKey: 'vadsolodovnik_CoinsManagerAPI'
        projectName: 'CoinsManagerAPI'
        extraProperties: |
          sonar.exclusions=CoinsManagerService/Migrations/**
          sonar.coverage.exclusions=CoinsManagerService/Migrations/**,CoinsManagerService/Profiles/**
          sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/TestResults/*.opencover.xml

    # Build the solution
    - task: DotNetCoreCLI@2
      displayName: 'Build Solution'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration Release'

    # Clean Artifacts directory
    - script: |
        rm -rf $(Build.ArtifactStagingDirectory)/*
      displayName: 'Clean Artifact Staging Directory'

    # Publish the App Service artifacts
    - task: DotNetCoreCLI@2
      displayName: 'Publish App Service'
      inputs:
        command: 'publish'
        projects: '**/CoinsManagerService/CoinsManagerService.csproj'
        arguments: '-c Release -r linux-x64 --output $(Build.ArtifactStagingDirectory)/AppService'

    # Build the Azure Function artifact
    - task: DotNetCoreCLI@2
      displayName: 'Build Azure Function'
      inputs:
        command: 'build'
        projects: '**/AzureFunctions/ProcessImagesFunction/ProcessImagesFunction.csproj'
        arguments: '-c Release --output $(Build.ArtifactStagingDirectory)/AzureFunctions/ProcessImagesFunction'

    # Publish Azure Function artifact
    - task: DotNetCoreCLI@2
      displayName: 'Publish Azure Function'
      inputs:
        command: 'publish'
        projects: '**/AzureFunctions/ProcessImagesFunction/ProcessImagesFunction.csproj'
        arguments: '-c Release --output $(Build.ArtifactStagingDirectory)/ProcessImagesFunction --no-restore --no-build'

    # Zip the Azure Function output
    - task: ArchiveFiles@2
      displayName: 'Create ZIP for Azure Function'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/AzureFunctions/ProcessImagesFunction'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/AzureFunctions/ProcessImagesFunction.zip'
        replaceExistingArchive: true
    
    - task: DotNetCoreCLI@2
      displayName: 'Run Unit Tests - CoinsManagerService'
      inputs:
        command: 'test'
        projects: '**/CoinsManagerService.Tests/*.csproj'
        arguments: >
          /p:CollectCoverage=true
          /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/CoinsManagerService.opencover.xml
          /p:CoverletOutputFormat=opencover

    - task: DotNetCoreCLI@2
      displayName: 'Run Unit Tests - AzureFunctions.Tests'
      inputs:
        command: 'test'
        projects: '**/AzureFunctions.Tests/*.csproj'
        arguments: >
          /p:CollectCoverage=true
          /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/AzureFunctions.opencover.xml
          /p:CoverletOutputFormat=opencover

    # Publish test results
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/TestResults'
        artifact: 'TestResults'
        publishLocation: 'pipeline'

    # Analyze with SonarCloud
    - task: SonarCloudAnalyze@3
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'

    # Publish SonarCloud results
    - task: SonarCloudPublish@3
      inputs:
        pollingTimeoutSec: '300'

    # Publish App Service artifact
    - task: PublishBuildArtifacts@1
      displayName: 'Publish App Service Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/AppService'
        ArtifactName: 'AppService'
        publishLocation: 'Container'

    # Publish the Azure Function ZIP artifact
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Azure Function ZIP Artifact'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/AzureFunctions/ProcessImagesFunction.zip'
        artifactName: 'ProcessImagesFunction'
        publishLocation: 'Container'
